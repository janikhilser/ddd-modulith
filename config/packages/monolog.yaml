monolog:
  channels:
    - deprecation # Deprecations are logged in the dedicated "deprecation" channel when it exists

when@dev:
  monolog:
    handlers:
      main:
        type: stream
        path: "%kernel.logs_dir%/%kernel.environment%.log"
        level: debug
        channels: [ "!event" ]
      console:
        type: console
        process_psr_3_messages: false
        channels: [ "!event", "!doctrine", "!console" ]

when@test:
  monolog:
    handlers:
      main:
        type: fingers_crossed
        action_level: error
        handler: nested
        excluded_http_codes: [ 404, 405 ]
        channels: [ "!event" ]
      nested:
        type: stream
        path: "%kernel.logs_dir%/%kernel.environment%.log"
        level: debug

when@prod:
  monolog:
    handlers:
      main:
        type: fingers_crossed
        action_level: error
        handler: grouped
        excluded_http_codes: [ 404, 405 ]
        buffer_size: 50 # How many messages should be saved? Prevent memory leaks
        channels: [ "!event" ]
      grouped:
        type: group
        members: [ streamed ]
      streamed:
        type: stream
        path: php://stderr
        level: debug
        formatter: monolog.formatter.json
      integration_fc:
        type: fingers_crossed
        # 500 errors are logged at the critical level
        action_level: critical
        # to also log 400 level errors (but not 404's):
        # action_level: error
        # excluded_http_codes: [404]
        handler: integration_mail
        channels: [ "integration" ]
      integration_mail:
        type: symfony_mailer
        from_email: 'xxx@xxx.xx'
        to_email: 'xxx@xxx.xx'
        subject: 'An Error Occurred! %%message%%'
        level: error
        formatter: monolog.formatter.html
        content_type: text/html
      console:
        type: console
        process_psr_3_messages: false
        channels: [ "!event", "!doctrine" ]
      deprecation:
        type: stream
        channels: [ deprecation ]
        path: php://stderr
        formatter: monolog.formatter.json
